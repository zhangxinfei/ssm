<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soecode.lyf.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="com.soecode.lyf.entity.Book" >
    <id column="book_id" property="book_id" jdbcType="INTEGER" />
    <result column="book_name" property="book_name" jdbcType="VARCHAR" />
    <result column="book_writer" property="book_writer" jdbcType="VARCHAR" />
    <result column="book_year" property="book_year" jdbcType="TIMESTAMP" />
    <result column="book_press" property="book_press" jdbcType="VARCHAR" />
    <result column="commodity_type" property="commodity_type" jdbcType="VARCHAR" />
    <result column="Commodity_id" property="commodity_id" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    book_id, book_name, book_writer, book_year, book_press, commodity_type, Commodity_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Book
    where book_id = #{book_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Book
    where book_id = #{book_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.soecode.lyf.entity.Book" >
    insert into Book (book_id, book_name, book_writer, 
      book_year, book_press, commodity_type, 
      Commodity_id)
    values (#{book_id,jdbcType=INTEGER}, #{book_name,jdbcType=VARCHAR}, #{book_writer,jdbcType=VARCHAR}, 
      #{book_year,jdbcType=TIMESTAMP}, #{book_press,jdbcType=VARCHAR}, #{commodity_type,jdbcType=VARCHAR}, 
      #{commodity_id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.soecode.lyf.entity.Book" >
    insert into Book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="book_id != null" >
        book_id,
      </if>
      <if test="book_name != null" >
        book_name,
      </if>
      <if test="book_writer != null" >
        book_writer,
      </if>
      <if test="book_year != null" >
        book_year,
      </if>
      <if test="book_press != null" >
        book_press,
      </if>
      <if test="commodity_type != null" >
        commodity_type,
      </if>
      <if test="commodity_id != null" >
        Commodity_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="book_id != null" >
        #{book_id,jdbcType=INTEGER},
      </if>
      <if test="book_name != null" >
        #{book_name,jdbcType=VARCHAR},
      </if>
      <if test="book_writer != null" >
        #{book_writer,jdbcType=VARCHAR},
      </if>
      <if test="book_year != null" >
        #{book_year,jdbcType=TIMESTAMP},
      </if>
      <if test="book_press != null" >
        #{book_press,jdbcType=VARCHAR},
      </if>
      <if test="commodity_type != null" >
        #{commodity_type,jdbcType=VARCHAR},
      </if>
      <if test="commodity_id != null" >
        #{commodity_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.soecode.lyf.entity.Book" >
    update Book
    <set >
      <if test="book_name != null" >
        book_name = #{book_name,jdbcType=VARCHAR},
      </if>
      <if test="book_writer != null" >
        book_writer = #{book_writer,jdbcType=VARCHAR},
      </if>
      <if test="book_year != null" >
        book_year = #{book_year,jdbcType=TIMESTAMP},
      </if>
      <if test="book_press != null" >
        book_press = #{book_press,jdbcType=VARCHAR},
      </if>
      <if test="commodity_type != null" >
        commodity_type = #{commodity_type,jdbcType=VARCHAR},
      </if>
      <if test="commodity_id != null" >
        Commodity_id = #{commodity_id,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{book_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soecode.lyf.entity.Book" >
    update Book
    set book_name = #{book_name,jdbcType=VARCHAR},
      book_writer = #{book_writer,jdbcType=VARCHAR},
      book_year = #{book_year,jdbcType=TIMESTAMP},
      book_press = #{book_press,jdbcType=VARCHAR},
      commodity_type = #{commodity_type,jdbcType=VARCHAR},
      Commodity_id = #{commodity_id,jdbcType=INTEGER}
    where book_id = #{book_id,jdbcType=INTEGER}
  </update>
</mapper>