<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soecode.lyf.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.soecode.lyf.entity.params.UserParams" >
    <id column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="user_name" property="user_name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_iphone" property="user_iphone" jdbcType="INTEGER" />
    <result column="user_qq" property="user_qq" jdbcType="INTEGER" />
    <result column="user_sex" property="user_sex" jdbcType="VARCHAR" />
    <result column="user_birthday" property="user_birthday" jdbcType="TIMESTAMP" />
    <result column="user_adress" property="user_adress" jdbcType="VARCHAR" />
    <result column="user_school" property="user_school" jdbcType="VARCHAR" />
    <result column="user_studentId" property="user_studentId" jdbcType="VARCHAR" />
    <result column="user_classid" property="user_classid" jdbcType="VARCHAR" />
    <result column="user_credit" property="user_credit" jdbcType="INTEGER" />
    <result column="user_status" property="user_status" jdbcType="INTEGER" />
    <result column="login_state" property="login_state" jdbcType="INTEGER" />
    <result column="user_username" property="user_username" jdbcType="VARCHAR" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
    <result column="administrators_id" property="administrators_id" jdbcType="INTEGER" />
    <result column="user_role" property="user_role" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, password, user_iphone, user_qq, user_sex, user_birthday, user_adress,
    user_school, user_studentId, user_classid, user_credit, user_status, login_state, 
    user_username, create_time, update_time, administrators_id, user_role
  </sql>
  <select id="selectUserByPrimaryKey" resultMap="BaseResultMap" parameterType="com.soecode.lyf.entity.params.UserParams" >
    select
    <include refid="Base_Column_List"/>
    from User
    where user_studentId = #{user_studentId,jdbcType=VARCHAR} and user_status = #{user_status,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from User
    where user_id = #{user_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.soecode.lyf.entity.User" >
    insert into User (user_id, user_name, password, 
      user_iphone, user_qq, user_sex, 
      user_birthday, user_adress, user_school, 
      user_studentId, user_classid, user_credit, 
      user_status, login_state, user_username, 
      create_time, update_time, administrators_id, 
      user_role)
    values (#{user_id,jdbcType=INTEGER}, #{user_name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{user_iphone,jdbcType=INTEGER}, #{user_qq,jdbcType=INTEGER}, #{user_sex,jdbcType=VARCHAR}, 
      #{user_birthday,jdbcType=TIMESTAMP}, #{user_adress,jdbcType=VARCHAR}, #{user_school,jdbcType=VARCHAR}, 
      #{user_studentId,jdbcType=VARCHAR}, #{user_classid,jdbcType=VARCHAR}, #{user_credit,jdbcType=INTEGER}, 
      #{user_status,jdbcType=INTEGER}, #{login_state,jdbcType=INTEGER}, #{user_username,jdbcType=VARCHAR}, 
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, #{administrators_id,jdbcType=INTEGER}, 
      #{user_role,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.soecode.lyf.entity.User" >
    insert into User
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="user_name != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="user_iphone != null" >
        user_iphone,
      </if>
      <if test="user_qq != null" >
        user_qq,
      </if>
      <if test="user_sex != null" >
        user_sex,
      </if>
      <if test="user_birthday != null" >
        user_birthday,
      </if>
      <if test="user_adress != null" >
        user_adress,
      </if>
      <if test="user_school != null" >
        user_school,
      </if>
      <if test="user_studentId != null" >
        user_studentId,
      </if>
      <if test="user_classid != null" >
        user_classid,
      </if>
      <if test="user_credit != null" >
        user_credit,
      </if>
      <if test="user_status != null" >
        user_status,
      </if>
      <if test="login_state != null" >
        login_state,
      </if>
      <if test="user_username != null" >
        user_username,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="update_time != null" >
        update_time,
      </if>
      <if test="administrators_id != null" >
        administrators_id,
      </if>
      <if test="user_role != null" >
        user_role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="user_name != null" >
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="user_iphone != null" >
        #{user_iphone,jdbcType=INTEGER},
      </if>
      <if test="user_qq != null" >
        #{user_qq,jdbcType=INTEGER},
      </if>
      <if test="user_sex != null" >
        #{user_sex,jdbcType=VARCHAR},
      </if>
      <if test="user_birthday != null" >
        #{user_birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="user_adress != null" >
        #{user_adress,jdbcType=VARCHAR},
      </if>
      <if test="user_school != null" >
        #{user_school,jdbcType=VARCHAR},
      </if>
      <if test="user_studentId != null" >
        #{user_studentId,jdbcType=VARCHAR},
      </if>
      <if test="user_classid != null" >
        #{user_classid,jdbcType=VARCHAR},
      </if>
      <if test="user_credit != null" >
        #{user_credit,jdbcType=INTEGER},
      </if>
      <if test="user_status != null" >
        #{user_status,jdbcType=INTEGER},
      </if>
      <if test="login_state != null" >
        #{login_state,jdbcType=INTEGER},
      </if>
      <if test="user_username != null" >
        #{user_username,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="administrators_id != null" >
        #{administrators_id,jdbcType=INTEGER},
      </if>
      <if test="user_role != null" >
        #{user_role,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.soecode.lyf.entity.User" >
    update User
    <set >
      <if test="user_name != null" >
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="user_iphone != null" >
        user_iphone = #{user_iphone,jdbcType=INTEGER},
      </if>
      <if test="user_qq != null" >
        user_qq = #{user_qq,jdbcType=INTEGER},
      </if>
      <if test="user_sex != null" >
        user_sex = #{user_sex,jdbcType=VARCHAR},
      </if>
      <if test="user_birthday != null" >
        user_birthday = #{user_birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="user_adress != null" >
        user_adress = #{user_adress,jdbcType=VARCHAR},
      </if>
      <if test="user_school != null" >
        user_school = #{user_school,jdbcType=VARCHAR},
      </if>
      <if test="user_studentId != null" >
        user_studentId = #{user_studentId,jdbcType=VARCHAR},
      </if>
      <if test="user_classid != null" >
        user_classid = #{user_classid,jdbcType=VARCHAR},
      </if>
      <if test="user_credit != null" >
        user_credit = #{user_credit,jdbcType=INTEGER},
      </if>
      <if test="user_status != null" >
        user_status = #{user_status,jdbcType=INTEGER},
      </if>
      <if test="login_state != null" >
        login_state = #{login_state,jdbcType=INTEGER},
      </if>
      <if test="user_username != null" >
        user_username = #{user_username,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="administrators_id != null" >
        administrators_id = #{administrators_id,jdbcType=INTEGER},
      </if>
      <if test="user_role != null" >
        user_role = #{user_role,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soecode.lyf.entity.User" >
    update User
    set user_name = #{user_name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_iphone = #{user_iphone,jdbcType=INTEGER},
      user_qq = #{user_qq,jdbcType=INTEGER},
      user_sex = #{user_sex,jdbcType=VARCHAR},
      user_birthday = #{user_birthday,jdbcType=TIMESTAMP},
      user_adress = #{user_adress,jdbcType=VARCHAR},
      user_school = #{user_school,jdbcType=VARCHAR},
      user_studentId = #{user_studentId,jdbcType=VARCHAR},
      user_classid = #{user_classid,jdbcType=VARCHAR},
      user_credit = #{user_credit,jdbcType=INTEGER},
      user_status = #{user_status,jdbcType=INTEGER},
      login_state = #{login_state,jdbcType=INTEGER},
      user_username = #{user_username,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      administrators_id = #{administrators_id,jdbcType=INTEGER},
      user_role = #{user_role,jdbcType=INTEGER}
    where user_studentId = #{user_studentId,jdbcType=INTEGER}
  </update>
  
      <!--通过id和密码判断，用户登录-->
  <select id="selectByKeyAndPassword" resultType="int" parameterType="com.soecode.lyf.entity.params.UserParams" >
    select
    count(*)
    from User
    where user_studentId = #{user_studentId,jdbcType=VARCHAR} and user_status = #{user_status,jdbcType=INTEGER}
    AND <if test="password != null and password != '' " >
           password = #{password,jdbcType=VARCHAR}
         </if>
  </select>
  <update id="updateByUserID" parameterType="com.soecode.lyf.entity.params.UserParams">
    update User
    set user_name = #{user_name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_iphone = #{user_iphone,jdbcType=INTEGER},
      user_qq = #{user_qq,jdbcType=INTEGER},
      user_sex = #{user_sex,jdbcType=VARCHAR},
      user_birthday = #{user_birthday,jdbcType=TIMESTAMP},
      user_adress = #{user_adress,jdbcType=VARCHAR},
      user_school = #{user_school,jdbcType=VARCHAR},
      user_studentId = #{user_studentId,jdbcType=VARCHAR},
      user_classid = #{user_classid,jdbcType=VARCHAR},
      user_credit = #{user_credit,jdbcType=INTEGER},
      user_status = #{user_status,jdbcType=INTEGER},
      login_state = #{login_state,jdbcType=INTEGER},
      user_username = #{user_username,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      administrators_id = #{administrators_id,jdbcType=INTEGER},
      user_role = #{user_role,jdbcType=INTEGER}
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
  <!--插入用户信息,使用update，如果成功返回1-->
  <update id="insertByUserId" parameterType="com.soecode.lyf.entity.params.UserParams" >
    insert into User (user_name, password,
      user_iphone, user_qq, user_sex,
      user_birthday, user_adress, user_school,
      user_studentId, user_classid, user_credit,
      user_status, login_state, user_username,
      create_time, update_time, administrators_id,
      user_role)
    values (#{#{user_name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{user_iphone,jdbcType=INTEGER}, #{user_qq,jdbcType=INTEGER}, #{user_sex,jdbcType=VARCHAR},
      #{user_birthday,jdbcType=TIMESTAMP}, #{user_adress,jdbcType=VARCHAR}, #{user_school,jdbcType=VARCHAR},
      #{user_studentId,jdbcType=VARCHAR}, #{user_classid,jdbcType=VARCHAR}, #{user_credit,jdbcType=INTEGER},
      #{user_status,jdbcType=INTEGER}, #{login_state,jdbcType=INTEGER}, #{user_username,jdbcType=VARCHAR},
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, #{administrators_id,jdbcType=INTEGER},
      #{user_role,jdbcType=INTEGER})
  </update>
  <!--查询全部用户信息,通过管理员id-->
  <select id="selectByUserAll" resultMap="BaseResultMap" parameterType="com.soecode.lyf.entity.params.UserParams" >
    select
    from User
    where administrators_id = #{administrators_id,jdbcType=INTEGER}
  </select>
  <!--删除用户，更改用户状态-->
  <update id="deleteByUserID" parameterType="com.soecode.lyf.entity.params.UserParams" >
    update USER
     set user_status = #{user_status}
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
</mapper>